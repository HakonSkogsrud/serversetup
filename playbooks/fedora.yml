---
- name: Setup installations of fedora
  hosts: fedora
  become: true
  vars_files:
    - ../secrets.yml

  roles:
    - weekly_update

  tasks:

    - name: Install required python package for ansible.dnf
      ansible.builtin.shell: dnf install -y python3-libdnf5
      args:
        warn: false # Suppress warnings about using shell for package management
      changed_when: false # This command only prepares the system, does not represent a config change

    # --- VSCodium Installation ---
    - name: Import VSCodium GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg

    - name: Add VSCodium DNF repository
      ansible.builtin.yum_repository:
        name: gitlab.com_paulcarroty_vscodium_repo
        description: download.vscodium.com
        baseurl: https://download.vscodium.com/rpms/
        enabled: true
        gpgcheck: true
        repo_gpgcheck: true
        gpgkey: https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg
        metadata_expire: 1h
        file: vscodium

    # --- RPM Fusion Installation ---
    - name: Add RPM Fusion repo gpg keys
      ansible.builtin.rpm_key:
        key: "{{ item }}"
        state: present
      with_items:
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020"
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020"

    - name: Install the RPM Fusion repo packages
      ansible.builtin.dnf:
        name:
          - "http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
          - "http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
        state: present
        disable_gpg_check: true # GPG keys are imported separately, but the packages themselves aren't signed in the same way

    # --- Brave Browser Installation ---
    - name: Add Brave browser GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc

    - name: Add Brave browser repository
      ansible.builtin.yum_repository:
        name: brave-browser
        description: Brave Browser
        baseurl: https://brave-browser-rpm-release.s3.brave.com/x86_64/
        enabled: true
        gpgcheck: true
        gpgkey: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc

    # --- Consolidated Package Installation ---
    - name: Install core packages, browsers, and tools
      ansible.builtin.dnf:
        name:
          - codium
          - brave-browser
          - vim
          - vlc
          - uv
          - git
          - intel-media-driver
          - gh
          - fish
        state: present
        update_cache: true # Good practice after adding new repos

    - name: Update all system packages
      ansible.builtin.dnf:
        name: '*'
        state: latest

    # --- Multimedia Setup ---
    - name: Install multimedia group
      ansible.builtin.dnf:
        name: "@multimedia"
        state: present
        update_cache: true

    - name: Swap ffmpeg-free for full ffmpeg from RPM Fusion
      ansible.builtin.dnf:
        name: ffmpeg
        state: present
        allowerasing: true

    - name: Upgrade multimedia packages
      ansible.builtin.dnf:
        name: "@multimedia"
        state: latest
        exclude: "PackageKit-gstreamer-plugin"
        install_weak_deps: false

    - name: Install sound and video group
      ansible.builtin.dnf:
        name: "@sound-and-video"
        state: present

    # --- VSCodium Configuration ---
    - name: Ensure VSCodium user config directory exists
      ansible.builtin.file:
        path: "/home/haaksk/.config/VSCodium/User"
        state: directory
        owner: haaksk
        group: haaksk
        mode: '0755'

    - name: Set VSCodium keyboard bindings
      ansible.builtin.copy:
        dest: /home/haaksk/.config/VSCodium/User/keybindings.json
        owner: haaksk
        group: haaksk
        mode: '0644'
        content: |
          [
              {
                  "key": "alt+[Semicolon]",
                  "command": "workbench.action.terminal.toggleTerminal",
                  "when": "terminal.active"
              },
              {
                  "key": "ctrl+shift+[Equal]",
                  "command": "-workbench.action.terminal.toggleTerminal",
                  "when": "terminal.active"
              },
              {
                  "key": "ctrl+w",
                  "command": "-workbench.action.terminal.killEditor",
                  "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
              },
              {
                  "key": "ctrl+t ctrl+t",
                  "command": "workbench.action.terminal.kill"
              }
          ]

    - name: Set VSCodium settings
      ansible.builtin.copy:
        dest: /home/haaksk/.config/VSCodium/User/settings.json
        owner: haaksk
        group: haaksk
        mode: '0644'
        backup: yes
        content: |
          {
              "window.titleBarStyle": "native",
              "window.menuBarVisibility": "toggle",
              "workbench.colorTheme": "Night Owl Light",
              "window.customTitleBarVisibility": "never",
              "window.zoomLevel": 0.5,
              "chat.editor.fontSize": 13,
              "editor.fontSize": 13,
              "editor.scrollbar.verticalScrollbarSize": 6,
              "editor.scrollbar.horizontalScrollbarSize": 6,
              "terminal.integrated.fontSize": 13,
              "editor.minimap.enabled": false,
              "git.confirmSync": false,
              "git.autofetch": true,
              "explorer.confirmDelete": false,
              "editor.fontFamily": "Luxi Mono Regular",
              "terminal.integrated.fontFamily": "courier",
              "git.enableSmartCommit": true,
              "workbench.preferredLightColorTheme": "Night Owl Light",
              "terminal.integrated.defaultProfile.linux": "fish",
              "terminal.integrated.sendKeybindingsToShell": true,
              "workbench.colorCustomizations": {
                  "[Night Owl Light]": {
                      "titleBar.activeBackground": "#f5f5f5",
                      "activityBar.background": "#f5f5f5",
                      "sideBar.background": "#f5f5f5",
                      "editorGroupHeader.tabsBackground": "#f5f5f5",
                      "tab.activeBackground": "#fbfbfb",
                      "tab.activeBorder": "#fbfbfb",
                      "tab.inactiveBackground": "#f5f5f5",
                      "sideBarSectionHeader.background": "#f5f5f5",
                      "panel.background": "#f5f5f5",
                      "list.activeSelectionBackground": "#fbfbfb",
                      "list.inactiveSelectionBackground": "#fbfbfb",
                      "sideBar.border": "#fbfbfb",
                      "titleBar.inactiveBackground": "#eff0f1",
                      "activityBar.border": "#f5f5f5",
                      "statusBar.border": "#f5f5f5",
                      "statusBar.background": "#f5f5f5"
                  },
                  "[Default Dark Modern]": {
                      "titleBar.activeBackground": "#292c30",
                      "activityBar.background": "#292c30",
                      "sideBar.background": "#292c30",
                      "editorGroupHeader.tabsBackground": "#292c30",
                      "tab.activeBackground": "#1f1f1f",
                      "tab.activeBorder": "#1f1f1f",
                      "tab.inactiveBackground": "#292c30",
                      "sideBarSectionHeader.background": "#292c30",
                      "panel.background": "#292c30",
                      "list.activeSelectionBackground": "#1f1f1f",
                      "list.inactiveSelectionBackground": "#1f1f1f",
                      "sideBar.border": "#1f1f1f",
                      "titleBar.inactiveBackground": "#eff0f1",
                      "activityBar.border": "#292c30",
                      "statusBar.border": "#292c30",
                      "statusBar.background": "#292c30"
                  }
              },
              "symbols.hidesExplorerArrows": false,
              "workbench.iconTheme": "symbols",
              "workbench.startupEditor": "none",
              "window.autoDetectColorScheme": true
          }

    # --- Fish Shell Configuration ---
    - name: Ensure fish config directories exist
      ansible.builtin.file:
        path: /home/haaksk/.config/fish/functions
        state: directory
        mode: '0755'
        owner: haaksk
        group: haaksk

    - name: Add aliases block to fish config
      ansible.builtin.blockinfile:
        path: "/home/haaksk/.config/fish/config.fish"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - ALIASES"
        create: yes
        owner: haaksk
        group: haaksk
        mode: '0644'
        block: |
          alias restart="source ~/.config/fish/config.fish"
          alias proxmox="ssh root@10.0.0.41"
          alias services="ssh haaksk@10.0.0.44"
          alias backupserver="ssh haaksk@100.104.43.26"
          alias pihole-macbook="ssh haaksk@10.0.0.27"
          alias pihole="ssh haaksk@10.0.0.77"
          alias codemachine2="ssh haaksk@10.0.0.84"
          alias venv="source .venv/bin/activate.fish"
          alias vim="vim"
          export EDITOR="vim"

    - name: Create custom fish prompt
      ansible.builtin.blockinfile:
        path: "/home/haaksk/.config/fish/functions/fish_prompt.fish"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - PROMPT"
        create: yes
        owner: haaksk
        group: haaksk
        mode: '0644'
        block: |
          function fish_prompt
              # Current Working Directory (CWD) - Blue icon, Cyan path
              set_color blue
              set_color cyan
              echo -n (prompt_pwd)

              # Virtual Environment (Venv) - Green
              if set -q VIRTUAL_ENV
                  set_color green
                  echo -n ' (🐍 '(basename "$VIRTUAL_ENV")')'
              end

              # Git Branch (and status) - Magenta for clean, Red for dirty
              set -l is_git_repo (git rev-parse --is-inside-work-tree 2>/dev/null)
              if test "$is_git_repo" = 'true'
                  set_color magenta
                  echo -n ' (🏷️ '(git rev-parse --abbrev-ref HEAD 2>/dev/null)
                  if not git diff --quiet HEAD 2>/dev/null; or not git diff --cached --quiet 2>/dev/null
                      set_color red
                      echo -n '✗' # Dirty icon
                  end
                  echo -n ')'
              end

              # Final Prompt Separator
              set_color normal
              echo -n ' ❯ '
          end

    # --- SMB Share Mount ---
    - name: Ensure SMB mount point and Samba config directory exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: "{{ item | regex_replace('/mnt.*', 'haaksk', 'root') }}" # owner is haaksk for /mnt, root for /etc
        group: "{{ item | regex_replace('/mnt.*', 'haaksk', 'root') }}"
      loop:
        - /mnt/smbshare
        - /etc/samba

    - name: Create Samba credentials file
      ansible.builtin.template:
        dest: /etc/samba/credentials
        src: /dev/null # Create an empty file first with correct permissions
        owner: root
        group: root
        mode: '0600'
        force: no # Do not overwrite if it exists

    - name: Add username and password to Samba credentials file
      ansible.builtin.lineinfile:
        path: /etc/samba/credentials
        regexp: '^{{ item.key }}='
        line: '{{ item.key }}={{ item.value }}'
        state: present
        owner: root
        group: root
        mode: '0600'
      loop:
        - { key: 'username', value: 'haaksk' }
        - { key: 'password', value: '{{ smb_user_password }}' }
      no_log: true # Prevent password from being logged

    - name: Add SMB share to fstab for automounting
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^//10\.0\.0\.44/share'
        line: '//10.0.0.44/share /mnt/smbshare cifs credentials=/etc/samba/credentials,uid=1000,gid=1000,iocharset=utf8,vers=3.0,x-systemd.automount,x-systemd.mount-timeout=30,_netdev 0 0'
        state: present
        backup: yes

    # --- Git Configuration and Code Repositories ---
    - name: Configure Git global user name for haaksk
      community.general.git_config:
        name: user.name
        scope: global
        value: "Håkon Skogsrud"
      become_user: haaksk

    - name: Configure Git global user email for haaksk
      community.general.git_config:
        name: user.email
        scope: global
        value: "haaksk@gmail.com"
      become_user: haaksk

    - name: Ensure Code directory exists
      ansible.builtin.file:
        path: /home/haaksk/Code
        state: directory
        owner: haaksk
        group: haaksk
        mode: '0755'

    - name: Clone serversetup repository
      ansible.builtin.git:
        repo: 'https://github.com/HakonSkogsrud/serversetup.git'
        dest: /home/haaksk/Code/serversetup
        version: main
        accept_hostkey: true
        force: yes
      become_user: haaksk