---
- name: Create immich VM
  hosts: proxmox # This play runs on the proxmox host
  become: false
  vars_files:
    - ../secrets.yml
  vars:
    target_vm_host: immich 
  roles:
    - role: create_vm
      vars:
        # Global Proxmox and template variables
        node: "{{ proxmox.node }}"
        api_user: "{{ proxmox.api_user }}"
        clone: "{{ template.name }}" # Name of the template to clone
        source_vmid_for_clone: "{{ template.vmid }}" # VMID of the template to clone

        # VM-specific variables from hostvars/immich.yml
        name: "{{ hostvars[target_vm_host].vm_name }}"
        newid: "{{ hostvars[target_vm_host].vmid }}"
        ipaddr: "{{ hostvars[target_vm_host].ansible_host }}"
        balloon: "{{ hostvars[target_vm_host].balloon_mb }}"
        cores: "{{ hostvars[target_vm_host].cores }}"
        memory: "{{ hostvars[target_vm_host].memory_mb }}"
        sockets: "{{ hostvars[target_vm_host].sockets }}"
        primary_disk_size: "{{ hostvars[target_vm_host].primary_disk_size }}"
        virtiofs_tag: "{{ hostvars[target_vm_host].virtiofs_tag_ref }}" 

- name: Configure immich VM
  hosts: immich 
  become: true
  vars_files:
    - ../secrets.yml
  roles:
    - role: mount_virtiofs
      tags: mount_virtiofs
      vars:
        virtiofs_tag: "{{ virtiofs_tag_ref }}" 
        mount_path: "/mnt/storage/immich"

    - role: docker_setup
      tags: docker_setup
      vars:
        user: "{{ ansible_user }}" 
        docker_group: docker

    - role: portainer_setup
      tags: portainer_setup

    - role: tailscale_setup
      tags: tailscale_setup
      vars:
        tailscale_hostname: "{{ vm_name }}" 

    - role: immich_update
      tags: immich_update
      vars:
        immich_project_dir: "/home/{{ ansible_user }}/immich-app"

    - role: cron_updates
      tags: cron_updates