---
- name: Configure Samba Share on AlmaLinux
  hosts: fileserver
  become: true
  vars_files:
    - ../common/secrets.yml
    - vars.yml

  tasks:
    - name: Ensure necessary packages are installed
      ansible.builtin.dnf:
        name:
          - samba
          - samba-client
          - policycoreutils-python-utils
          - firewalld
        state: present
        update_cache: true

    - name: Ensure firewalld service is started and enabled
      ansible.builtin.systemd:
        name: firewalld.service
        state: started
        enabled: true

    - name: Create the Samba group
      ansible.builtin.group:
        name: "{{ smb_group }}"
        state: present

    - name: Create the Samba user
      ansible.builtin.user:
        name: "{{ smb_user }}"
        state: present
        shell: /bin/bash
        groups:
          - "{{ sudo_group }}" # Add to sudo group
          - "{{ smb_group }}" # Add to samba group
        append: true # Append groups, don't replace

    - name: Set Samba password for the user
      ansible.builtin.shell:
        cmd: set -o pipefail && echo -ne '{{ smb_user_password }}\n{{ smb_user_password }}\n' | smbpasswd -s -a {{ smb_user }}
      args:
        executable: /bin/bash
      changed_when: true
      no_log: true

    - name: Ensure the Samba share directory exists with correct permissions
      ansible.builtin.file:
        path: "{{ share_path }}"
        state: directory
        mode: "2770" # Includes setgid bit
        owner: root
        group: "{{ smb_group }}"
        recurse: true # Apply recursively to existing contents

    - name: Enable necessary Samba SELinux booleans
      ansible.posix.seboolean:
        name: "{{ item }}"
        state: true
        persistent: true
      loop:
        - samba_enable_home_dirs
        - samba_export_all_rw

    - name: Get current state of Samba SELinux booleans (for verification)
      ansible.builtin.command: getsebool samba_enable_home_dirs samba_export_all_rw
      register: sebool_status
      changed_when: false # This command doesn't change state

    - name: Allow Samba service through the firewall
      ansible.posix.firewalld:
        service: samba
        permanent: true
        state: enabled
        immediate: true # Apply the rule to the running configuration immediately

    - name: Configure Samba share in smb.conf
      ansible.builtin.blockinfile:
        path: /etc/samba/smb.conf
        block: |
          [share]
             comment = Cross-Platform Shared Folder
             path = {{ share_path }}
             browseable = Yes
             read only = No
             writable = yes
             valid users = @{{ smb_group }}
             write list = @{{ smb_group }}
             inherit permissions = yes

             # Permissions
             create mask = 0660
             directory mask = 0775

             # macOS Compatibility (VFS Objects)
             vfs objects = fruit streams_xattr
             fruit:metadata = stream
             fruit:model = MacSamba
             fruit:veto_appledouble = no
             fruit:nfs_aces = no
             fruit:wipe_intentionally_left_blank_rfork = yes
             fruit:delete_empty_adfiles = yes
             fruit:posix_rename = yes
        state: present
        create: false # Don't create smb.conf if it doesn't exist
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR {{ share_path }}"
      notify: Restart Samba Services # Notify handler if change is made

    - name: Ensure Samba services are enabled and running
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - smb.service
        - nmb.service

  handlers:
    - name: Restart Samba Services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
      loop:
        - smb.service
        - nmb.service
