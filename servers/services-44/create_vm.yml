---
- name: Clone and Configure Proxmox VM
  hosts: proxmox
  gather_facts: false
  vars_files:
    - ../common/secrets.yml
  vars:
    target_vmid: 4000  # Define the target VM ID as a variable
  tasks:
    # --- venv tasks remain the same ---
    - name: Ensure Python 3 and venv are installed (if running on PVE node)
      ansible.builtin.package:
        name:
          - python3
          - python3-venv
        state: present
      become: true
      when: inventory_hostname == 'proxmox' 

    - name: Create a Python virtual environment for Ansible (if running on PVE node)
      ansible.builtin.command:
        cmd: python3 -m venv /opt/ansible_venv
        creates: /opt/ansible_venv
      become: true
      when: inventory_hostname == 'proxmox' 

    - name: Ensure proxmoxer and requests libraries are installed in the venv (if running on PVE node)
      ansible.builtin.command:
        cmd: /opt/ansible_venv/bin/pip install proxmoxer requests
        creates: /opt/ansible_venv/lib/python3.*/site-packages/proxmoxer
      become: true
      when: inventory_hostname == 'proxmox' 

    - name: Set the Python interpreter (if running on PVE node)
      set_fact:
        ansible_python_interpreter: /opt/ansible_venv/bin/python3
      when: inventory_hostname == 'proxmox' 

    # --- Task to Clone
    - name: Clone VM 
      community.general.proxmox_kvm:
        # --- Connection ---
        api_host: 10.0.0.41
        api_user: root@pam
        api_token_id: ansible-automation
        api_token_secret: "{{ pve_api_token_secret }}"
        node: proxmox

        # --- Clone Operation ---
        clone: "alma-cloud-template-automated"
        vmid: 9003              # Source VM ID
        name: "services"
        newid: "{{ target_vmid }}"  # Use the variable for the target VM ID
        full: yes                 # Create a full clone

        # --- Target VM State ---
        state: present            # Ensure VM exists
        description: "Fileserver VM created with Ansible"


    - name: configure Hardware
      community.general.proxmox_kvm:
        # --- Connection ---
        api_host: 10.0.0.41
        api_user: root@pam
        api_token_id: ansible-automation
        api_token_secret: "{{ pve_api_token_secret }}"
        node: proxmox

        # --- Clone Operation ---
        vmid: "{{ target_vmid }}"  
        state: present
        update: true

        # --- Hardware ---
        balloon: 1024
        cores: 1
        memory: 6000
        sockets: 1
        onboot: 1
        
    # --- Task to add virtiofs0 using qm set ---
    - name: Set virtiofs0 configuration using qm command
      ansible.builtin.command:
        cmd: qm set "{{ target_vmid }}" --virtiofs0 'smb,expose-xattr=1'
      changed_when: true 

    - name: Change ip
      ansible.builtin.command:
        cmd: qm set "{{ target_vmid }}" --ipconfig0 ip=10.0.0.44/24,gw=10.0.0.138

    - name: Check VM status
      ansible.builtin.command:
        cmd: qm status "{{ target_vmid }}"
      register: vm_status
      ignore_errors: true # Ignore errors if the VM doesn't exist or status can't be determined

    - name: Start the VM if not running
      ansible.builtin.command:
        cmd: qm start "{{ target_vmid }}"
      when: vm_status.rc != 0 or "stopped" in vm_status.stdout
      changed_when: vm_status.rc != 0 or "stopped" in vm_status.stdout