---
- name: Mount VirtioFS
  hosts: immich
  become: true
  vars:
    mount_path: /mnt/storage/immich
    virtiofs_tag: immich
    data_dir: /mnt/storage/immich
    immich_dir: /home/haaksk/immich-app
    immich_user: haaksk # Define the user who will "own" the app dir
    immich_group: docker # Define the group for the directories

  tasks:
    - name: Ensure VirtioFS mount point directory exists
      ansible.builtin.file:
        path: "{{ mount_path }}"
        state: directory


    - name: Add VirtioFS entry to /etc/fstab
      ansible.posix.mount:
        path: "{{ mount_path }}"
        src: "{{ virtiofs_tag }}"
        fstype: virtiofs
        opts: defaults,nofail
        dump: 0
        passno: 0
        state: present
      notify: Mount VirtioFS filesystem

    - name: Ensure immich_dir exists
      ansible.builtin.file:
        path: "{{ immich_dir }}"
        state: directory
        owner: "{{ immich_user }}"
        group: "{{ immich_group }}"
        mode: "0755"

    - name: Ensure data_dir exists (Fail if not)
      ansible.builtin.stat:
        path: "{{ data_dir }}"
      register: data_dir_stat
      failed_when: not data_dir_stat.stat.exists or not data_dir_stat.stat.isdir
      ignore_errors: true # Check existence first without failing playbook immediately
      # Re-check and fail explicitly if needed after ignoring errors

    - name: Fail if data_dir does not exist or is not a directory
      ansible.builtin.fail:
        msg: "data_dir '{{ data_dir }}' must exist and be a directory."
      when: not data_dir_stat.stat.exists or not data_dir_stat.stat.isdir

    - name: Set group for data_dir
      ansible.builtin.file:
        path: "{{ data_dir }}"
        state: directory # Ensures it's a directory, redundant but safe
        group: "{{ immich_group }}"
        recurse: true
        # Keep existing owner and mode unless specified


    - name: Ensure setgid bit is set for data_dir
      ansible.builtin.file:
        path: "{{ data_dir }}"
        state: directory
        mode: "2775" # Setgid bit (2) ensures group inheritance
        group: "{{ immich_group }}"

    - name: Install SELinux Python utilities
      ansible.builtin.package:
        name: policycoreutils-python-utils
        state: present

    - name: Ensure SELinux context 'container_file_t' for immich_dir
      community.general.sefcontext:
        target: "{{ immich_dir }}(/.*)?" # Regex matching the dir and contents
        setype: container_file_t
        state: present
        reload: true # Apply context immediately (like restorecon)

    - name: Ensure SELinux context 'container_file_t' for data_dir
      community.general.sefcontext:
        target: "{{ data_dir }}(/.*)?" # Regex matching the dir and contents
        setype: container_file_t
        state: present
        reload: true # Apply context immediately (like restorecon)

  handlers:
    - name: Mount VirtioFS filesystem
      ansible.posix.mount:
        path: "{{ mount_path }}"
        src: "{{ virtiofs_tag }}"
        fstype: virtiofs
        state: mounted
