---
- name: Ensure the update script directory exists
  ansible.builtin.file:
    path: /usr/local/bin
    state: directory
    mode: "0755"

- name: Create the update script with logging
  ansible.builtin.copy:
    dest: /usr/local/bin/update_packages.sh
    content: |
      #!/bin/bash
      LOG_FILE="/var/log/weekly_update-script.log"
      
      log() {
          echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
      }
      
      # Ensure the log file is accessible
      touch "$LOG_FILE" 2>/dev/null || log "Warning: Could not access $LOG_FILE. Logging only to cron output."

      log "Starting package update script."
      
      source /usr/local/lib/send_pushover.sh

      if command -v sudo >/dev/null 2>&1; then
        SUDO="sudo"
        log "Sudo command found."
      else
        SUDO=""
        log "Sudo command not found, running commands directly."
      fi

      if command -v apt-get >/dev/null 2>&1; then
        log "Detected apt-get system. Running updates..."
        $SUDO apt-get update -y
        if [ $? -eq 0 ]; then
          log "Package list updated. Running upgrades..."
          $SUDO apt-get upgrade -y
          if [ $? -ne 0 ]; then
            log "APT upgrade failed."
            send_pushover "${pushover_token_update:-}" "Update on machine $(hostname) failed during apt upgrade" "System update FAILED" 1
            exit 1
          fi
        else
          log "APT update failed."
          send_pushover "${pushover_token_update:-}" "Update on machine $(hostname) failed during apt update" "System update FAILED" 1
          exit 1
        fi
      elif command -v dnf >/dev/null 2>&1; then
        log "Detected dnf system. Running upgrade..."
        $SUDO dnf upgrade -y
        if [ $? -ne 0 ]; then
          log "DNF upgrade failed."
          send_pushover "${pushover_token_update:-}" "Update on machine $(hostname) failed during dnf upgrade" "System update FAILED" 1
          exit 1
        fi
      else
        log "No supported package manager (apt-get or dnf) found. Aborting."
        send_pushover "${pushover_token_update:-}" "Update on machine $(hostname) failed: No package manager found" "System update FAILED" 1
        exit 1
      fi

      log "Package update completed successfully."
      send_pushover "${pushover_token_update:-}" "Update on machine $(hostname) successful" "System update" 0
      log "Success notification sent."
      log "Script finished."
    mode: "0755"

- name: Add a cron job to run the update script weekly as root
  ansible.builtin.cron:
    name: "Weekly package updates"
    job: "pushover_token_update='{{ pushover_token_update }}' pushover_user='{{ pushover_user }}' /usr/local/bin/update_packages.sh"
    user: root
    weekday: "5" 
    hour: "12" 
    minute: "0"

- name: Restart cron service
  ansible.builtin.service:
    name: "{{ 'crond' if ansible_os_family == 'RedHat' else 'cron' }}"
    state: restarted
    enabled: true