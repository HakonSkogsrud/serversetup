---
- name: Ensure the update script directory exists
  ansible.builtin.file:
    path: /usr/local/bin
    state: directory
    mode: "0755"

- name: Create the update script
  ansible.builtin.copy:
    dest: /usr/local/bin/update_packages.sh
    content: |
      #!/bin/bash
      source /usr/local/lib/send_pushover.sh

      if command -v sudo >/dev/null 2>&1; then
        SUDO="sudo"
      else
        SUDO=""
      fi

      if command -v apt-get >/dev/null 2>&1; then
        $SUDO apt-get update -y && $SUDO apt-get upgrade -y
      elif command -v dnf >/dev/null 2>&1; then
        $SUDO dnf upgrade -y
      fi
      send_pushover "${pushover_token_update:-}" "Update on machine $(hostname) successful" "System update" 0
    mode: "0755"

- name: Add a cron job to run the update script weekly as root
  ansible.builtin.cron:
    name: "Weekly package updates"
    job: "pushover_token_update='{{ pushover_token_update }}' pushover_user='{{ pushover_user }}' /usr/local/bin/update_packages.sh >> /var/log/weekly_update-cron.log 2>&1"
    user: root
    weekday: "5" 
    hour: "12" 
    minute: "0"


- name: Restart cron service
  ansible.builtin.service:
    name: "{{ 'crond' if ansible_os_family == 'RedHat' else 'cron' }}"
    state: restarted
    enabled: true
